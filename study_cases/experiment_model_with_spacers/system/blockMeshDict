/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2306                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;  //0.001;

vertices
(    
/*
(-0.03175 0 -0.03175) // 0
(0.03175 0 -0.03175) // 1
(0.03175 0.1 -0.03175) // 2
(-0.03175 0.1 -0.03175)
(-0.03175 0 0.03175)
(0.03175 0 0.03175)
(0.03175 0.1 0.03175)
(-0.03175 0.1 0.03175)
  
*/  

(-50 -100 -185) // 0
(1050 -100 -185) // 1
(1050 260 -185) // 2
(-50 260 -185)
(-50 -100 98)
(1050 -100 98)
(1050 260 98)
(-50 260 98)
 
);

blocks
(	
	//x = 63.5  y = 1000  z = 63.5
	// dx = x/nx = 63.5/nx    dy = y/ny = 1000/ny   dz = z/nz = 63.5/nz
	//    hex (0 1 2 3 4 5 6 7) (100 \5500 100) simpleGrading (1 1 1) 		// dx = dy = dz = 1
    //hex (0 1 2 3 4 5 6 7) (150 800 150) simpleGrading (1 1 1) 		// dx = dy = dz = 1
        hex (0 1 2 3 4 5 6 7) (80 80 100) simpleGrading (1 1 1) 		// dx = dy = dz = 1
   // hex (0 1 2 3 4 5 6 7) (100 1500 100) simpleGrading (1 1 1) 		// dx = dy = dz = 1    
   // hex (0 1 2 3 4 5 6 7) (635 10000 635) simpleGrading (1 1 1) 		// dx = dy = dz = 0.1
    //hex (0 1 2 3 4 5 6 7) (318 5000 318) simpleGrading (1 1 1) 		// dx = dy = dz = 0.5
   // hex (0 1 2 3 4 5 6 7) (46 250 46) simpleGrading (1 1 1) 
);

edges
(
);

boundary
(
    top
    {
        type patch;
        faces
        (
            (3 7 6 2)
        );
    }
    bottom
    {
        type patch;
        faces
        (
            (1 5 4 0)
        );
    }
    left
    {
        type wall;
        faces
        (
            (0 4 7 3)
        );
    }
    right
    {
        type wall;
        faces
        (
            (2 6 5 1)
        );
    }
    front
    {
        type wall;
        faces
        (
            (4 5 6 7)
        );
    }
    back
    {
        type wall;
        faces
        (
            (0 3 2 1)
        );
    }
);

mergePatchPairs
(
);


// ************************************************************************* //
